# parameters
nc: 6  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple

# anchors
anchors:
  - [18,18, 23,23, 19,32]  # P3/8
  - [34,19, 29,29, 23,47]  # P4/16
  - [48,25, 36,37, 47,47]  # P5/32

# YOLOv5 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Focus, [64, 3]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 9, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 1, SPP, [1024, [5, 9, 13]]],
   [-1, 3, C3, [1024, False]],  # 9
  ]

# YOLOv5 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small) - 16x16

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium) - 8x8
   
   [-1, 1, nn.Upsample, [None, 0.5, 'bilinear', 'True']], # 21 (P4/32 - downscaled to 4x4)
   [20, 1, nn.Upsample, [None, 2, 'nearest']], # 22 (P4/8 - upscaled to 16x16)

   [20, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large) - 4x4
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 26 (P5/16 - upscaled to 8x8)

   # Proposed model
   [[24, 21], 1, Concat, [1]],  # 27, P5 cat P4 (Large receptive field)
   [-1, 3, C3, [1024, False]],  # 28 squeeze channels back to original

   [[20, 26], 1, Concat, [1]],  # 29 P4 cat P5 (Medium receptive field)
   [-1, 3, C3, [512, False]],  # 30 squeeze channels back to original

   [[17, 22], 1, Concat, [1]],  # 31 P3 cat P4 (Small receptive field)
   [-1, 3, C3, [256, False]],  # 32 squeeze channels back to original

   [[28, 30, 32], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]